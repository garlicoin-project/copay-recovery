{"version":3,"sources":["/Users/rshaw/Development/copay-recovery/src async","/Users/rshaw/Development/copay-recovery/src/app/app.component.html","/Users/rshaw/Development/copay-recovery/src/app/app.component.scss","/Users/rshaw/Development/copay-recovery/src/app/app.component.ts","/Users/rshaw/Development/copay-recovery/src/app/app.module.ts","/Users/rshaw/Development/copay-recovery/src/app/services/recovery.service.ts","/Users/rshaw/Development/copay-recovery/src/environments/environment.ts","/Users/rshaw/Development/copay-recovery/src/main.ts","buffer (ignored)","crypto (ignored)","util (ignored)","util (ignored)?864b","buffer (ignored)?ce5f","buffer (ignored)?7686","buffer (ignored)?087f","util (ignored)?f86f","util (ignored)?f6e1","buffer (ignored)?78b0","util (ignored)?7397","util (ignored)?efb2"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,8D;;;;;;;ACNA,miCAAmiC,iBAAiB,YAAY,cAAc,YAAY,gBAAgB,+IAA+I,gBAAgB,yEAAyE,cAAc,wEAAwE,eAAe,upBAAupB,QAAQ,ybAAyb,QAAQ,2mBAA2mB,OAAO,m+BAAm+B,SAAS,4PAA4P,SAAS,uBAAuB,SAAS,kyBAAkyB,SAAS,qBAAqB,SAAS,uRAAuR,SAAS,sBAAsB,SAAS,4iCAA4iC,iBAAiB,y0C;;;;;;;ACA/lN;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACtB;AACuC;AASnE;IAiCE,sBAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAvB7C,aAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;QAwBpB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,GAAG,EAAE,IAAI,CAAC,UAAU;SACrB,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,GAAG,CAAC,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;QACpG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,+CAAwB,GAAxB;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,6EAA6E,CAAC,CAAC;QAC1I,IAAI,MAAM;YAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,yCAAkB,GAAlB;QACE,IAAI,CAAC,QAAQ,GAAG,2CAAK,CAAC,6CAAO,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;YACpE,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAa,GAAb;QAAA,iBAqEC;QApEC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,MAAM,GAAG,2CAAK,CAAC,6CAAO,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;YACjE,OAAO;gBACL,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;gBACjC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;gBACjC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;aACpC;QACH,CAAC,CAAC,CAAC;QAEH,IAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;QAED,IAAI;YACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC3H;QAAC,OAAO,EAAE,EAAE;YACX,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;QAEzC,IAAI,QAAQ,GAAG,UAAU,UAAU,EAAE,eAAe;YAClD,IAAI,OAAO,GAAG,6CAAO,CAAC,+CAAS,CAAC,2CAAK,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClE,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC;QAChD,CAAC,CAAC;QAEF,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAC3B,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAErB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAG;YACnE,IAAI,GAAG;gBAAE,OAAO,KAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEzC,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YAE7G,KAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;YACxC,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACxD,KAAI,CAAC,eAAe,GAAG,qBAAqB,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1H,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC9C,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC,EAAE;oBAChC,KAAI,CAAC,eAAe,IAAI,uBAAuB,CAAC;iBACjD;gBACD,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAe,GAAf,UAAgB,MAAM,EAAE,KAAa;QACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,+BAAQ,GAAR,UAAS,UAAe,EAAE,KAAa;QACrC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,GAAS,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,QAAQ,GAAe,IAAI,UAAU,EAAE,CAAC;QAE5C,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,gCAAS,GAAT,UAAU,kBAA0B,EAAE,KAAa;QAAnD,iBA2BC;QA1BC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,GAAG,6CAA6C,GAAG,kBAAkB,GAAG,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE;YACxK,OAAO;SACR;QAED,IAAI,KAAK,CAAC;QAEV,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI;YACF,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACvG;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;YAClF,QAAQ,CAAC,SAAS,CAAC,cAAI;gBACrB,KAAI,CAAC,WAAW,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,oBAAoB,GAAG,kBAAkB,EAAE,CAAC,CAAC,CAAC;gBACzJ,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,GAAG,CAAC,GAAG,uBAAuB,GAAG,kBAAkB,CAAC,CAAC;gBAC7H,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,KAAI,CAAC,WAAW,CAAC,qDAAqD,EAAE,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEF,uCAAgB,GAAhB;QACE,IAAI,GAAG,CAAC;QAER,QAAQ,IAAI,CAAC,KAAK,EAAE;YAClB,KAAK,cAAc;gBACjB,GAAG,GAAG,yBAAyB,CAAC;gBAChC,MAAM;YACR,KAAK,aAAa;gBAChB,GAAG,GAAG,gCAAgC,CAAC;gBACvC,MAAM;YACR,KAAK,aAAa;gBAChB,GAAG,GAAG,qCAAqC,CAAC;gBAC5C,MAAM;YACR,KAAK,aAAa;gBAChB,6CAA6C;gBAC7C,GAAG,GAAG,oCAAoC,CAAC;gBAC3C,MAAM;YACR,KAAK,aAAa;gBAChB,GAAG,GAAG,6BAA6B,CAAC;gBACpC,MAAM;YACR;gBACE,GAAG,GAAG,gCAAgC,CAAC;SAC1C;QAED,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACjD,GAAG,CAAC,KAAK,EAAE,CAAC;IACd,CAAC;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,kCAAW,GAAX,UAAY,OAAe,EAAE,IAAY;QACvC;;;;UAIE;QAEF,IAAI,IAAI,IAAI,CAAC,EAAE;YACb,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aAAM,IAAI,IAAI,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC;aAAM,IAAI,IAAI,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC;QACD,UAAU,CAAC;YACT,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;;IA7PU,YAAY;QAPxB,wFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0EAAmC;YACnC,0EAAmC;YACnC,SAAS,EAAE,CAAC,uFAAe,CAAC;SAC7B,CAAC;6DAmCqC,uFAAe,oBAAf,uFAAe;OAjCzC,YAAY,CA+PxB;IAAD,mBAAC;CAAA;AA/PwB;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACyB;AAEZ;AAEP;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,8EAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBC;AAEM;AACiB;AACJ;AACS;AACA;AACJ;AACnB;AAGE;AAG9B;IAeE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAb7B,oBAAe,GAAY,IAAI,CAAC,CAAC,yBAAyB;QAI1D,WAAM,GAAG;YACd,cAAc,EAAE,uCAAuC;YACvD,aAAa,EAAE,iCAAiC;YAChD,aAAa,EAAE,sCAAsC;YACrD,uDAAuD;YACvD,aAAa,EAAE,qCAAqC;YACpD,aAAa,EAAE,8BAA8B;SAC9C,CAAC;QAGA,IAAI,CAAC,KAAK,GAAG;YACX,yEAAyE;YACzE,OAAO,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,CAAE;YACtD,OAAO,EAAE;gBACP,SAAS,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;gBAC7C,SAAS,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;gBAC7C,aAAa,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC;aAClD;SACF;IACH,CAAC;IAED,oCAAU,GAAV,UAAW,IAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,OAAe;QACvE,IAAI,CAAC,IAAI,CAAC,MAAM;YACd,OAAO,IAAI,CAAC;QACd,IAAI;YACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;SAC/G;QAAA,CAAC;QACF,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,6CAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACpD;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QAAA,CAAC;QAEF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,mLAAmL,CAAC,CAAC;SACtM;QACD,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SACtF;QAEH,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACvD,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,IAAI,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC7B,IAAI;gBACF,KAAK,GAAG,6CAAY,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;aACjE;YAAC,OAAO,EAAE,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAChB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAChD;SACF;QACD,IAAI,UAAU,GAAG;YACf,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,aAAa,EAAE,OAAO,CAAC,aAAa;YACpC,KAAK,EAAE,KAAK;YACZ,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,IAAI,OAAO;YACzD,WAAW,EAAE,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW;YACjF,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,QAAQ;SACf,CAAC;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,kDAAwB,GAAxB,UAAyB,KAAa;QACpC,IAAI;YACF,IAAI,gDAAQ,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC9D;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,OAAO,mGAAmG,CAAC;SAC5G;QAAA,CAAC;QAEF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,sCAAY,GAAZ,UAAa,IAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,OAAe;QACzE,IAAI,CAAC,IAAI,CAAC,MAAM;YACd,OAAO,IAAI,CAAC;QAEd,IAAI,KAAK,GAAG,4CAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,KAAK,CAAC;QAEV,IAAI;YACF,KAAK,GAAG,IAAI,gDAAQ,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC5E;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACvD;QAAA,CAAC;QAEF,IAAI,UAAU,GAAG;YACf,KAAK,EAAE,KAAK;YACZ,kBAAkB,EAAE,OAAO;YAC3B,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;YACtC,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,UAAU;SACjB,CAAC;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,qCAAW,GAAX,UAAY,WAAgB;QAC1B,IAAI,MAAW,CAAC;QAChB,WAAW,GAAG,+CAAS,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAEtC,IAAI,4CAAM,CAAC,2CAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC;YAChD,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;QAGxD,IAAI,4CAAM,CAAC,2CAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC;YAChD,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAE/C,MAAM,GAAG,4CAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,oBAAoB,EAAE,aAAa,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC;QAEzI,MAAM,CAAC,QAAQ,GAAG,2CAAK,CAAC,WAAW,EAAE,UAAC,CAAM;YAC1C,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ;gBAC/B,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAChE,OAAO;gBACL,SAAS,EAAE,CAAC,CAAC,SAAS;gBACtB,KAAK,EAAE,CAAC,CAAC,KAAK;aACf,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAE;YAC3B,IAAI,4CAAM,CAAC,+CAAS,CAAC,2CAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM;gBACzF,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACtE;QAED,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;QAEzC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,mCAAS,GAAT,UAAU,IAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,OAAe;QAAxE,iBAuBC;QAtBC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,WAAW,GAAG,2CAAK,CAAC,IAAI,EAAE,UAAC,QAAa;YAC1C,QAAQ,CAAC,MAAM,GAAG,4CAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG;gBAClC,OAAO,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;;gBAEtD,OAAO,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,IAAI,MAAM,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,2CAAY,CAAC;SAC7B;aAAM,IAAI,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,yCAAU,CAAC;SAC3B;aAAM,IAAI,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,8CAAc,CAAC;SAC/B;aAAM,IAAI,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,8CAAc,CAAC;SAC/B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;SACzC;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED,oCAAU,GAAV,UAAW,MAAW,EAAE,KAAa,EAAE,QAAkB,EAAE,EAAY;QACrE,IAAI,KAAiB,CAAC;QAEtB,yBAAyB;QACzB,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAC,GAAG,EAAE,SAAS;YAC9D,IAAI,GAAG;gBAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;YACxB,KAAK,GAAG,+CAAS,CAAC,2CAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YAC5C,IAAI,MAAM,GAAG;gBACX,SAAS,EAAE,4CAAM,CAAC,SAAS,CAAC;gBAC5B,OAAO,EAAE,6CAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;aAClC;YACD,OAAO,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR,UAAS,MAAW;QAClB,IAAI,MAAM,CAAC,kBAAkB,IAAI,OAAO,EAAE;YACxC,IAAI,CAAC,GAAG,6CAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvD,uBAAuB;YACvB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAI,YAAY,GAAG,CAAC,QAAQ,GAAC,CAAC,GAAC,IAAI,EAAG,QAAQ,GAAC,CAAC,GAAC,IAAI,CAAC,CAAC;gBACvD,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;aAC5B;YAAA,CAAC;YACF,OAAO,CAAC,CAAC;SACV;QACD,IAAI,MAAM,CAAC,kBAAkB,IAAI,OAAO;YACtC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAAA,CAAC;IAEF,0CAAgB,GAAhB,UAAiB,MAAW;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,SAAS,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS;YACvC,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;YACvG,OAAO,QAAQ,CAAC;QAClB,CAAC;QAAA,CAAC;QAEF,SAAS,MAAM,CAAC,MAAM;YACpB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC;gBAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;YAEzC,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE;gBACrB,IAAI,YAAY,GAAG,EAAE,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAClC,YAAY,CAAC,IAAI,CAAC,+CAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9C;oBAAA,CAAC;iBACH;gBAAA,CAAC;gBACF,OAAO,YAAY,CAAC;YACtB,CAAC;YAAA,CAAC;YACF,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,4CAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC;QAAA,CAAC;QAEF,IAAI,SAAS,GAAG,2CAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,4CAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,UAAC,IAAI;YACjC,IAAI,UAAU,GAAG,MAAM,CAAC,2CAAK,CAAC,SAAS,EAAE,UAAC,KAAK,EAAE,CAAC;gBAChD,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC7C,IAAI,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBACjD,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,KAAK,CAAC,IAAI,CAAC;oBACT,OAAO,EAAE,CAAC,GAAG,CAAC;oBACd,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI;oBACf,GAAG,EAAE,SAAS;iBACf,CAAC,CAAC;gBACH,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE;oBACnD,KAAK,CAAC,IAAI,CAAC;wBACT,OAAO,EAAE,CAAC,GAAG,CAAC;wBACd,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE,KAAK;wBAChB,GAAG,EAAE,YAAY;qBAClB,CAAC,CAAC;iBACJ;gBACD,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC,CAAC;YACJ,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACrB,CAAC;IAAA,CAAC;IAEF,4CAAkB,GAAlB,UAAmB,MAAW,EAAE,KAAa,EAAE,QAAkB,EAAE,EAAY;QAC7E,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,aAAa,CAAC;QAElB,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAE7B,SAAS,iBAAiB,CAAC,CAAC;YAE1B,IAAI,CAAC,IAAI,eAAe,CAAC,MAAM;gBAAE,OAAO,EAAE,CAAC,IAAI,EAAE,8CAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;YACrF,aAAa,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,GAAG,EAAE,SAAS;gBAC3C,IAAI,GAAG;oBAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;gBACxB,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC;QAED,SAAS,MAAM,CAAC,cAAc,EAAE,KAAK,EAAE,EAAE;YACvC,IAAI,aAAa,GAAG,KAAK;gBAAE,OAAO,EAAE,EAAE,CAAC;YAEvC,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,WAAW;gBACzE,IAAI,GAAG;oBAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;gBAExB,IAAI,CAAC,+CAAS,CAAC,WAAW,CAAC,EAAE;oBAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,WAAW,CAAC,CAAC;oBAC7C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC7C,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAChC,aAAa,GAAG,CAAC,CAAC;iBACnB;;oBACC,aAAa,EAAE,CAAC;gBAElB,QAAQ,CAAC,aAAa,EAAE,8CAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;gBAE5D,MAAM,CAAC,cAAc,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC;QACD,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,yCAAe,GAAf,UAAgB,MAAW,EAAE,YAAiB,EAAE,KAAa;QAC3D,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,kBAAkB,GAAG,EAAE,CAAC;QAC5B,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAE3B,4CAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,UAAC,IAAI;YACnC,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEvD,yBAAyB;YACzB,IAAI,iBAAiB,GAAG,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;YACnE,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE3C,wBAAwB;YACxB,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,aAAa,EAAE;YACxB,IAAI,aAAW,CAAC;YAChB,IAAI,iBAAiB,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAChD,IAAI,MAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChD,IAAI,UAAQ,GAAG,QAAQ,CAAC,4CAAM,CAAC,MAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YACjD,iBAAiB,GAAG,EAAE,CAAC;YACvB,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,IAAI;gBAClC,IAAI,MAAM,CAAC,kBAAkB,IAAI,OAAO,EAAE;oBACtC,2BAA2B;oBAC3B,IAAI,SAAS,GAAG,QAAQ,CAAC,2CAAK,CAAC,MAAI,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACrD,aAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,UAAQ,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC1H;qBACI,IAAI,MAAM,CAAC,kBAAkB,IAAI,OAAO,EAAE;oBAC7C,aAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAQ,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACnG;gBAED,iBAAiB,CAAC,IAAI,CAAC,aAAW,CAAC,SAAS,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,OAAO,CAAC;QACZ,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM;YAC9B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aACxF,IAAI,MAAM,CAAC,WAAW,IAAI,OAAO;YACpC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;;YAEnF,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAChD,OAAO;YACL,aAAa,EAAE,OAAO;YACtB,OAAO,EAAE,iBAAiB;YAC1B,QAAQ,EAAE,kBAAkB;YAC5B,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAED,wCAAc,GAAd,UAAe,OAAY,EAAE,IAAY,EAAE,OAAe,EAAE,EAAY;QAAxE,iBAuCC;QAtCC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,8CAA8C;QAC9C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,cAAmB;YAC/E,cAAc,CAAC,SAAS,CAAC,qBAAW;gBAClC,2CAA2C;gBAC3C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,QAAa;oBACvE,QAAQ,CAAC,SAAS,CAAC,sBAAY;wBAE7B,IAAI,IAAI,GAAG,GAAG,GAAG,OAAO,IAAI,aAAa,IAAI,KAAI,CAAC,eAAe,EAAE;4BACjE,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;4BAChF,YAAY,GAAG,KAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;yBACxD;wBAED,IAAI,WAAW,GAAG;4BAChB,OAAO,EAAE,WAAW,CAAC,OAAO;4BAC5B,OAAO,EAAE,WAAW,CAAC,OAAO;4BAC5B,kBAAkB,EAAE,WAAW,CAAC,kBAAkB;4BAClD,IAAI,EAAE,YAAY;4BAClB,QAAQ,EAAE,OAAO,CAAC,QAAQ;4BAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;4BACxB,IAAI,EAAE,OAAO,CAAC,IAAI;4BAClB,KAAK,EAAE,OAAO,CAAC,KAAK;4BACpB,QAAQ,EAAE,WAAW,CAAC,uBAAuB,GAAG,WAAW,CAAC,YAAY,GAAG,CAAC;yBAC7E,CAAC;wBACF,4BAA4B;wBAC5B,8FAA8F;wBAE9F;oEAC4C;wBAC5C,UAAU,CAAC;4BACT,IAAI,WAAW,CAAC,QAAQ;gCACtB,OAAO,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;4BAC/B,OAAO,EAAE,EAAE,CAAC;wBACd,CAAC,EAAE,IAAI,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAoB,GAApB,UAAqB,SAAc;QAAnC,iBAKC;QAJC,SAAS,CAAC,OAAO,CAAC,cAAI;YACpB,IAAI,CAAC,OAAO,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,8CAAoB,GAApB,UAAqB,OAAe;QAClC,IAAI,WAAW,GAAG,oDAAkB,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAI,aAAa,GAAG,yDAAsB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC/D,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,0CAAgB,GAAhB,UAAiB,OAAe;QAC9B,IAAI,WAAW,GAAG,yDAAsB,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,OAAO,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAI,aAAa,GAAG,oDAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC3D,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,sCAAY,GAAZ,UAAa,OAAe,EAAE,IAAY,EAAE,OAAe;QAA3D,iBAQC;QAPC,IAAI,IAAI,GAAG,GAAG,GAAG,OAAO,IAAI,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE;YACjE,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;SAC1C;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,GAAG,aAAa,CAAC;QAC3F,OAAO,IAAI,OAAO,CAAC,iBAAO;YACxB,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAU,GAAV,UAAW,OAAe,EAAE,IAAY,EAAE,OAAe;QAAzD,iBAQC;QAPC,IAAI,IAAI,GAAG,GAAG,GAAG,OAAO,IAAI,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE;YACjE,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;SAC1C;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,GAAG,iBAAiB,CAAC;QAC/F,OAAO,IAAI,OAAO,CAAC,iBAAO;YACxB,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX,UAAY,SAAiB,EAAE,WAAgB,EAAE,MAAW,EAAE,GAAW;QACvE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC;YACxD,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QAEnD,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,WAAW,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1E,IAAI,MAAM,IAAI,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;QAExE,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC;QAE5D,IAAI;YACF,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;SACrD;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QAED,IAAI;YACF,IAAI,QAAQ,GAAG,EAAE,CAAC;YAElB,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAExC,4CAAM,CAAC,WAAW,CAAC,SAAS,EAAE,UAAC,OAAY;gBACzC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3B,4CAAM,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,CAAC;wBAErB,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM;4BAC9B,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;4BAEtC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAEb,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClE,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YAGH,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACzB,EAAE,CAAC,IAAI,CAAC,4CAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;YACxC,OAAO,KAAK,CAAC;SACd;QAAC,OAAO,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,2CAA2C;IAC3C,qCAAW,GAAX,UAAY,KAAa,EAAE,IAAY,EAAE,OAAe;QAAxD,iBAQC;QAPC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,SAAS,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC,CAAC;QACtC,OAAO,IAAI,OAAO,CAAC,iBAAO;YACxB,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC1B,KAAK,EAAE,KAAK;aACb,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;;IA/eU,eAAe;QAD3B,wFAAU,EAAE;6DAgBe,wEAAU,oBAAV,wEAAU;OAfzB,eAAe,CAgf3B;IAAD,sBAAC;CAAA;AAhf2B;;;;;;;;;AChB5B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,IAAI,8EAAW,CAAC,UAAU,EAAE;IAC1B,4FAAc,EAAE,CAAC;CAClB;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;ACVpD,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;;;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rshaw/Development/copay-recovery/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<div class=\\\"header\\\">\\n  <div class=\\\"header-content\\\">\\n    <!-- <img class=\\\"bitpay-logo\\\" src=\\\"assets/img/bitpay-logo-negative.svg\\\" alt=\\\"Bitpay\\\"> -->\\n    <div class=\\\"header-center\\\">\\n      <h3 class=\\\"header-title\\\">Recovery Tool</h3>\\n      <div class=\\\"repository-link\\\">\\n        <a href=\\\"https://github.com/garlicoin-project/copay-recovery\\\" target=\\\"blank\\\">\\n          <img src=\\\"assets/img/github.png\\\" alt=\\\"Github\\\">\\n        </a>\\n      </div>\\n    </div>\\n    <!-- <img class=\\\"copay-logo\\\" src=\\\"assets/img/copay-logo-negative.svg\\\" alt=\\\"Copay\\\"> -->\\n  </div>\\n</div>\\n<div [hidden]=\\\"!showLoadingSpinner\\\" class=\\\"no-clickable-background\\\">\\n  <div class=\\\"loading-message\\\">\\n    <h5>Please wait</h5>\\n    <h5>This process could take several minutes</h5>\\n    <PRE *ngIf=\\\"(reportAddresses || reportAmount || reportInactive) && beforeScan\\\">\\n      <div class=\\\"labels\\\">\\n        Scanned addresses:\\n        Found funds:\\n        Inactive Addresses Streak:\\n      </div>\\n      <div class=\\\"values\\\">\\n        {{reportAddresses}}\\n        {{reportAmount}}\\n        {{reportInactive}}\\n      </div>\\n    </PRE>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n\\n  <div [hidden]=\\\"!successMessage\\\" class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n  <div [hidden]=\\\"!errorMessage\\\" class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n  <div [hidden]=\\\"!statusMessage\\\" class=\\\"alert alert-info\\\">{{statusMessage}}</div>\\n\\n  <form #processInputsForm=\\\"ngForm\\\" (ngSubmit)=\\\"processInputs()\\\" *ngIf=\\\"beforeScan\\\">\\n\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-block\\\">\\n        <h4 class=\\\"card-title\\\">WALLET CONFIGURATION</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-xs-12 first-row\\\">\\n            <div class=\\\"form-group signatures\\\">\\n              <label for=\\\"signaturesNumber\\\">Required number of signatures</label>\\n              <select class=\\\"form-control\\\" id=\\\"signaturesNumber\\\" name=\\\"signaturesNumber\\\" [(ngModel)]=\\\"signaturesNumber\\\">\\n              <option *ngFor=\\\"let option of availableOptions\\\" [ngValue]=\\\"option\\\">{{option}}</option>\\n            </select>\\n            </div>\\n\\n            <div class=\\\"form-group copayers\\\">\\n              <label for=\\\"copayersNumber\\\">Total number of Copayers</label>\\n              <select class=\\\"form-control\\\" id=\\\"copayersNumber\\\" name=\\\"copayersNumber\\\" [(ngModel)]=\\\"copayersNumber\\\" (ngModelChange)=\\\"updateCopayersForm($event)\\\">\\n              <option *ngFor=\\\"let option of availableOptions\\\" [ngValue]=\\\"option\\\">{{option}}</option>\\n            </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group col-sm-6 col-xs-12\\\">\\n            <label for=\\\"chain\\\">Chain: Bitcoin</label>\\n            <span *ngIf=\\\"chain == 'btc/livenet'\\\">livenet</span>\\n            <span *ngIf=\\\"chain == 'btc/testnet'\\\">testnet</span>\\n            <span *ngIf=\\\"chain == 'bch/livenet'\\\">Cash livenet</span>\\n            <div class=\\\"chain-select\\\">\\n              <select class=\\\"form-control\\\" id=\\\"chain\\\" name=\\\"chain\\\" [(ngModel)]=\\\"chain\\\">\\n                <option *ngFor=\\\"let chain of availableChains\\\" [ngValue]=\\\"chain\\\">{{chain}}</option>\\n              </select>\\n              <div class=\\\"chain-logo-container\\\">\\n                <img src=\\\"assets/img/icon-btc.svg\\\" class=\\\"chain-logo\\\" *ngIf=\\\"chain == 'btc/livenet'\\\">\\n                <img src=\\\"assets/img/icon-testnet.svg\\\" class=\\\"chain-logo\\\" *ngIf=\\\"chain == 'btc/testnet'\\\">\\n                <img src=\\\"assets/img/icon-bch.svg\\\" class=\\\"chain-logo\\\" *ngIf=\\\"chain == 'bch/livenet'\\\">\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group col-sm-6 col-xs-12\\\">\\n            <label for=\\\"addressGap\\\">Address Gap</label><small> (Usually does not need to be changed)</small>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"addressGap\\\" name=\\\"addressGap\\\" [(ngModel)]=\\\"addressGap\\\" required>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card\\\" *ngFor=\\\"let copayer of copayers\\\">\\n      <div class=\\\"card-block\\\">\\n        <h6 class=\\\"card-title\\\">Backup for copayer {{copayer}}:</h6>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-sm-6\\\">\\n            <label for=\\\"dataBackUp\\\">Recovery phrase (mnemonic) or File/Text backup</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dataBackUp-{{copayer}}\\\" name=\\\"dataBackUp-{{copayer}}\\\" [(ngModel)]=\\\"data.backUp[copayer]\\\"\\n              autocomplete=\\\"off\\\">\\n          </div>\\n\\n          <div class=\\\"form-group col-sm-6\\\">\\n            <label for=\\\"contentFile\\\">Or upload a File/Text backup:</label>\\n            <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"contentFile\\\" name=\\\"contentFile\\\" accept=\\\".json, .txt\\\" aria-describedby=\\\"contentFileHelp\\\"\\n              (change)=\\\"fileChangeEvent($event, copayer)\\\">\\n            <small id=\\\"fileHelp\\\" class=\\\"form-text text-muted\\\">Extensions accepted: .json and .txt</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dataPass\\\">Backup password:</label><small> (in case you have one)</small>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"dataPass-{{copayer}}\\\" name=\\\"dataPass-{{copayer}}\\\" [(ngModel)]=\\\"data.pass[copayer]\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dataPassX\\\">Encrypted private key password</label><small> (spending password)</small>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"dataPassX-{{copayer}}\\\" name=\\\"dataPassX-{{copayer}}\\\" [(ngModel)]=\\\"data.passX[copayer]\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>\\n      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"termsAccepted\\\" name=\\\"termsAccepted\\\">\\n        I have read and accept <a href=\\\"https://copay.io/disclaimer\\\" target=\\\"_blank\\\">Terms and Conditions</a>\\n      </label>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!processInputsForm.form.valid  || showLoadingSpinner || !termsAccepted\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">\\n      <span *ngIf=\\\"chain == 'grlc/livenet'\\\">Scan GRLC Wallet</span>\\n      <span *ngIf=\\\"chain == 'btc/livenet' || chain == 'btc/testnet'\\\">Scan BTC Wallet</span>\\n      <span *ngIf=\\\"chain == 'bch/livenet'\\\">Scan BCH Wallet</span>\\n      <span *ngIf=\\\"chain == 'btg/livenet'\\\">Scan BTG Wallet</span>\\n    </button>\\n  </form>\\n\\n  <form #sendFundsForm=\\\"ngForm\\\" (ngSubmit)=\\\"sendFunds(destinationAddress, chain)\\\" *ngIf=\\\"!beforeScan && !done\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-block\\\">\\n        <h6 class=\\\"card-title\\\">{{totalBalanceStr}}</h6>\\n        <div class=\\\"input-group\\\" *ngIf=\\\"!insufficentsFunds\\\">\\n          <div class=\\\"input-group-addon\\\">Destination Address:</div>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"destinationAddress\\\" name=\\\"destinationAddress\\\" [(ngModel)]=\\\"destinationAddress\\\"\\n            required>\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!insufficentsFunds\\\" [disabled]=\\\"!sendFundsForm.form.valid || showLoadingSpinner\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Transfer</button>\\n  </form>\\n\\n  <button type=\\\"button\\\" (click)=\\\"viewOnBlockchain()\\\" *ngIf=\\\"broadcasted\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\">View on blockchain</button>\\n  <button type=\\\"button\\\" (click)=\\\"ngOnInit()\\\" *ngIf=\\\"!beforeScan\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\">Go back</button>\\n\\n  <div [hidden]=\\\"!showLoadingSpinner\\\">\\n    <div class=\\\"s1\\\">\\n      <div class=\\\"s b sb1\\\"></div>\\n      <div class=\\\"s b sb2\\\"></div>\\n      <div class=\\\"s b sb3\\\"></div>\\n      <div class=\\\"s b sb4\\\"></div>\\n    </div>\\n    <div class=\\\"s2\\\">\\n      <div class=\\\"s b sb5\\\"></div>\\n      <div class=\\\"s b sb6\\\"></div>\\n      <div class=\\\"s b sb7\\\"></div>\\n      <div class=\\\"s b sb8\\\"></div>\\n    </div>\\n    <div class=\\\"bigcon\\\">\\n      <div class=\\\"big b\\\"></div>\\n    </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rshaw/Development/copay-recovery/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rshaw/Development/copay-recovery/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { RecoveryService } from '../app/services/recovery.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [RecoveryService]\n})\n\nexport class AppComponent implements OnInit {\n  public availableOptions: Array<any>;\n  public availableChains: Array<any>;\n  public signaturesNumber: number; //m\n  public copayersNumber: number; //n\n  public chain: string;\n  public network: string;\n  public coin: string;\n  public addressGap: number;\n  public beforeScan: boolean;\n  public copayers = [1];\n  public data: any;\n  public termsAccepted: boolean;\n  public statusMessage: string;\n  public successMessage: string;\n  public errorMessage: string;\n  public totalBalanceStr: string;\n  public totalBalance: number;\n  public destinationAddress: string;\n  public showLoadingSpinner: boolean;\n  public done: boolean;\n  public broadcasted: boolean;\n  public insufficentsFunds: boolean;\n\n  public reportAmount: string;\n  public reportInactive: string;\n  public reportAddresses: string;\n\n  private wallet: any;\n  private scanResults: any;\n  private fee: number;\n  private txid: string;\n\n  constructor(private RecoveryService: RecoveryService) {\n    this.addressGap = 20;\n    this.data = {\n      backUp: [],\n      pass: [],\n      passX: [],\n      gap: this.addressGap\n    };\n    this.availableOptions = [1, 2, 3, 4, 5, 6];\n    this.availableChains = ['grlc/livenet', 'btc/livenet', 'btc/testnet', 'bch/livenet', 'btg/livenet'];\n    this.fee = 0.001;\n    this.signaturesNumber = this.availableOptions[0];\n    this.copayersNumber = this.availableOptions[0];\n    this.chain = this.availableChains[0];\n    this.statusMessage = null;\n    this.successMessage = null;\n    this.errorMessage = null;\n    this.showLoadingSpinner = false;\n    this.done = false;\n    this.broadcasted = false;\n    this.insufficentsFunds = false;\n    this.termsAccepted = false;\n  }\n\n  ngOnInit() {\n    this.hideMessage();\n    this.beforeScan = true;\n    this.done = false;\n    this.broadcasted = false;\n    this.insufficentsFunds = false;\n    this.destinationAddress = '';\n    this.txid = null;\n    this.checkAngularCryptoConfig();\n  }\n\n  checkAngularCryptoConfig() {\n    var result = this.RecoveryService.checkAngularCryptoConfig('imitate type scorpion whip oil cheese achieve rail organ donkey note screen');\n    if (result) this.showMessage(result, 3);\n  }\n\n  updateCopayersForm() {\n    this.copayers = _.map(_.range(1, this.copayersNumber + 1), function (i) {\n      return i;\n    });\n  }\n\n  processInputs() {\n    this.hideMessage();\n    let self = this;\n    this.showLoadingSpinner = true;\n    this.beforeScan = true;\n\n    var inputs = _.map(_.range(1, this.copayersNumber + 1), function (i) {\n      return {\n        backup: self.data.backUp[i] || '',\n        password: self.data.pass[i] || '',\n        xPrivPass: self.data.passX[i] || '',\n      }\n    });\n\n    if(this.chain.match(/grlc/)) {\n      this.network = 'livenet';\n      this.coin = 'grlc';\n      this.fee = 0.001;\n    } else if (this.chain.match(/bch/)) {\n      this.network = 'livenet';\n      this.coin = 'bch';\n      this.fee = 0.00001;\n    } else if (this.chain.match(/btg/)) {\n      this.network = 'livenet';\n      this.coin = 'btg';\n      this.fee = 0.00015;\n    } else {\n      this.network = this.chain.replace('btc/', '');\n      this.coin = 'btc';\n      this.fee = 0.001;\n    }\n\n    try {\n      this.wallet = this.RecoveryService.getWallet(inputs, this.signaturesNumber, this.copayersNumber, this.coin, this.network);\n    } catch (ex) {\n      this.showLoadingSpinner = false;\n      return this.showMessage(ex.message, 3);\n    }\n    this.showMessage('Scanning funds...', 1);\n\n    var reportFn = function (currentGap, activeAddresses) {\n      var balance = _.sumBy(_.flatten(_.map(activeAddresses, \"utxo\")), 'amount');\n      var balStr = balance.toFixed(8) + ' ';\n      self.reportInactive = currentGap;\n      self.reportAmount = balStr + ' ' + self.wallet.coin.toUpperCase();\n      self.reportAddresses = activeAddresses.length;\n    };\n\n    var gap = +this.addressGap;\n    gap = gap ? gap : 20;\n\n    this.RecoveryService.scanWallet(this.wallet, gap, reportFn, (err, res) => {\n      if (err) return this.showMessage(err, 3);\n\n      this.scanResults = res;\n      console.log('## Total balance:', this.scanResults.balance.toFixed(8) + ' ' + this.wallet.coin.toUpperCase());\n\n      this.showMessage('Search completed', 2);\n      this.showLoadingSpinner = false;\n      this.beforeScan = false;\n      this.totalBalance = this.scanResults.balance.toFixed(8);\n      this.totalBalanceStr = \"Available balance: \" + this.scanResults.balance.toFixed(8) + ' ' + this.wallet.coin.toUpperCase();\n      if ((this.scanResults.balance - this.fee) <= 0) {\n        if (this.scanResults.balance > 0) {\n          this.totalBalanceStr += \". Insufficient funds.\";\n        }\n        this.insufficentsFunds = true;\n      }\n    });\n  }\n\n  fileChangeEvent($event, index: number): void {\n    this.readThis($event.target, index);\n  }\n\n  readThis(inputValue: any, index: number): void {\n    let self = this;\n    var file: File = inputValue.files[0];\n    var myReader: FileReader = new FileReader();\n\n    myReader.readAsText(file);\n    myReader.onloadend = function (e) {\n      self.data.backUp[index] = myReader.result;\n    }\n  }\n\n  sendFunds(destinationAddress: string, chain: string) {\n    if (!confirm('A total of ' + this.totalBalance + ' will be send to: \\n\\nDestination address: ' + destinationAddress + '\\nChain: ' + chain.substring(0, 3).toUpperCase())) {\n      return;\n    }\n\n    var rawTx;\n\n    this.showLoadingSpinner = true;\n\n    try {\n      rawTx = this.RecoveryService.createRawTx(destinationAddress, this.scanResults, this.wallet, this.fee);\n    } catch (ex) {\n      return this.showMessage(ex.message, 3);\n    }\n    this.done = true;\n\n    this.RecoveryService.txBroadcast(rawTx, this.coin, this.network).then((response: any) => {\n      response.subscribe(resp => {\n        this.showMessage((this.scanResults.balance - this.fee).toFixed(8) + ' ' + this.wallet.coin.toUpperCase() + ' sent to address: ' + destinationAddress, 2);\n        this.broadcasted = true;\n        this.txid = resp.txid;\n        console.log('Transaction complete. ' + (this.scanResults.balance - this.fee) + ' TX sent to address: ' + destinationAddress);\n        console.log('Transaction id: ', this.txid);\n      });\n    }).catch(err => {\n      this.showMessage('Could not broadcast transaction. Please, try later.', 3);\n    });\n  };\n\n  viewOnBlockchain() {\n    var url;\n\n    switch (this.chain) {\n      case 'grlc/livenet':\n        url = 'https://garli.co.in/tx/';\n        break;\n      case 'btc/livenet':\n        url = 'https://insight.bitpay.com/tx/';\n        break;\n      case 'btc/testnet':\n        url = 'https://test-insight.bitpay.com/tx/';\n        break;\n      case 'bch/livenet':\n        //url = 'https://bch-insight.bitpay.com/tx/';\n        url = 'https://blockdozer.com/insight/tx/';\n        break;\n      case 'btg/livenet':\n        url = 'https://btgexplorer.com/tx/';\n        break;\n      default:\n        url = 'https://insight.bitpay.com/tx/';\n    }\n\n    var win = window.open(url + this.txid, '_blank');\n    win.focus();\n  }\n\n  hideMessage() {\n    this.statusMessage = null;\n    this.successMessage = null;\n    this.errorMessage = null;\n  }\n\n  showMessage(message: string, type: number) {\n    /*\n      1 = status\n      2 = success\n      3 = error\n    */\n\n    if (type == 1) {\n      this.statusMessage = message;\n      this.successMessage = null;\n      this.errorMessage = null;\n    } else if (type == 2) {\n      this.successMessage = message;\n      this.statusMessage = null;\n      this.errorMessage = null;\n      this.showLoadingSpinner = false;\n    } else if (type == 3) {\n      this.errorMessage = message;\n      this.statusMessage = null;\n      this.successMessage = null;\n      this.showLoadingSpinner = false;\n    }\n    setTimeout(function () {\n      window.scrollTo(0, 1);\n    }, 150);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/rshaw/Development/copay-recovery/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/rshaw/Development/copay-recovery/src/app/app.module.ts","import {\n  Injectable\n} from '@angular/core';\n\nimport * as sjcl from 'sjcl';\nimport * as garlicoreLib from 'garlicore-lib';\nimport * as bitcoreLib from 'bitcore-lib';\nimport * as bitcoreLibCash from 'bitcore-lib-cash';\nimport * as bitcoreLibGold from 'bitcore-lib-gold';\nimport * as Mnemonic from 'garlicore-mnemonic';\nimport * as _ from 'lodash';\nimport {\n  HttpClient\n} from '@angular/common/http';\n\n@Injectable()\nexport class RecoveryService {\n  public bitcore;\n  public shouldTranslate: boolean = true; //FOR BLOCKDOZER EXPLORER\n\n  public PATHS: Object;\n\n  public apiURI = {\n    'grlc/livenet': 'https://garli.co.in/insight-grlc-api/',\n    'btc/livenet': 'https://insight.bitpay.com/api/',\n    'btc/testnet': 'https://test-insight.bitpay.com/api/',\n    //'bch/livenet': 'https://bch-insight.bitpay.com/api/,'\n    'bch/livenet': 'https://blockdozer.com/insight-api/',\n    'btg/livenet': 'https://btgexplorer.com/api/'\n  };\n\n  constructor(private http: HttpClient) {\n    this.PATHS = {\n      // we found some broken BIP45 wallet, that have some BIP44 addresses, so:\n      'BIP45': [\"m/45'/2147483647/0\", \"m/45'/2147483647/1\" ],\n      'BIP44': {\n        'testnet': [\"m/44'/1'/0'/0\", \"m/44'/1'/0'/1\"],\n        'livenet': [\"m/44'/0'/0'/0\", \"m/44'/0'/0'/1\"],\n        'bch/livenet': [\"m/44'/0'/0'/0\", \"m/44'/0'/0'/1\"]\n      },\n    }\n  }\n\n  fromBackup(data: any, m: number, n: number, coin: string, network: string) {\n    if (!data.backup)\n      return null;\n    try {\n      JSON.parse(data.backup);\n    } catch (ex) {\n      console.log(ex);\n      throw new Error(\"JSON invalid. Please copy only the text within (and including) the { } brackets around it.\");\n    };\n    var payload;\n    try {\n      payload = sjcl.decrypt(data.password, data.backup);\n    } catch (ex) {\n      console.log(ex);\n      throw new Error(\"Incorrect backup password\");\n    };\n\n    payload = JSON.parse(payload);\n    if (!payload.n) {\n      throw new Error(\"Backup format not recognized. If you are using a Copay Beta backup and version is older than 0.10, please see: https://github.com/bitpay/copay/issues/4730#issuecomment-244522614\");\n    }\n    if ((payload.m != m) || (payload.n != n)) {\n      throw new Error(\"The wallet configuration (m-n) does not match with values provided.\");\n      }\n\n    if (payload.network != network) {\n      throw new Error(\"Incorrect network.\");\n    }\n    if (!(payload.xPrivKeyEncrypted) && !(payload.xPrivKey)) {\n      throw new Error(\"The backup does not have a private key\");\n    }\n    var xPriv = payload.xPrivKey;\n    if (payload.xPrivKeyEncrypted) {\n      try {\n        xPriv = sjcl.decrypt(data.xPrivPass, payload.xPrivKeyEncrypted);\n      } catch (ex) {\n        console.log(ex);\n        throw new Error(\"Can not decrypt private key\");\n      }\n    }\n    var credential = {\n      walletId: payload.walletId,\n      copayerId: payload.copayerId,\n      publicKeyRing: payload.publicKeyRing,\n      xPriv: xPriv,\n      derivationStrategy: payload.derivationStrategy || \"BIP45\",\n      addressType: payload.derivationStrategy == \"BIP45\" ? \"P2SH\" : payload.addressType,\n      m: m,\n      n: n,\n      network: network,\n      coin: coin,\n      from: \"backup\",\n    };\n    return credential;\n  }\n\n  checkAngularCryptoConfig(words: string) {\n    try {\n      new Mnemonic(words).toHDPrivateKey('', 'testnet').toString();\n    } catch (ex) {\n      console.log(ex);\n      return 'Before starting, check the angular cli configuration described in the README/Installation section';\n    };\n\n    return null;\n  }\n\n  fromMnemonic(data: any, m: number, n: number, coin: string, network: string) {\n    if (!data.backup)\n      return null;\n\n    var words = _.trim(data.backup);\n    var passphrase = data.password;\n    var xPriv;\n\n    try {\n      xPriv = new Mnemonic(words).toHDPrivateKey(passphrase, network).toString();\n    } catch (ex) {\n      console.log(ex);\n      throw new Error(\"Mnemonic wallet seed is not valid.\");\n    };\n\n    var credential = {\n      xPriv: xPriv,\n      derivationStrategy: \"BIP44\",\n      addressType: n == 1 ? \"P2PKH\" : \"P2SH\",\n      m: m,\n      n: n,\n      network: network,\n      coin: coin,\n      from: \"mnemonic\",\n    };\n    return credential;\n  }\n\n  buildWallet(credentials: any) {\n    var result: any;\n    credentials = _.compact(credentials);\n    if (credentials.length == 0)\n      throw new Error('No data provided');\n\n    if (_.uniq(_.map(credentials, 'from')).length != 1)\n      throw new Error('Mixed backup sources not supported');\n\n\n    if (_.uniq(_.map(credentials, 'coin')).length != 1)\n      throw new Error('Mixed coins not supported');\n\n    result = _.pick(credentials[0], [\"walletId\", \"derivationStrategy\", \"addressType\", \"m\", \"n\", \"network\", \"from\", \"coin\", \"publicKeyRing\"]);\n\n    result.copayers = _.map(credentials, (c: any) => {\n      if (c.walletId != result.walletId)\n        throw new Error(\"Backups do not belong to the same wallets.\");\n      return {\n        copayerId: c.copayerId,\n        xPriv: c.xPriv,\n      };\n    });\n    if (result.from == \"backup\") {\n      if (_.uniq(_.compact(_.map(result.copayers, 'copayerId'))).length != result.copayers.length)\n        throw new Error(\"Some of the backups belong to the same copayers\");\n    }\n\n    console.log('Recovering wallet', result);\n\n    return result;\n  }\n\n  getWallet(data: any, m: number, n: number, coin: string, network: string) {\n    var self = this;\n    var credentials = _.map(data, (dataItem: any) => {\n      dataItem.backup = _.trim(dataItem.backup);\n      if (dataItem.backup.charAt(0) == '{')\n        return this.fromBackup(dataItem, m, n, coin, network);\n      else\n        return this.fromMnemonic(dataItem, m, n, coin, network);\n    });\n\n    if (coin == 'grlc') {\n      self.bitcore = garlicoreLib;\n    } else if (coin == 'btc') {\n      self.bitcore = bitcoreLib;\n    } else if (coin == 'bch') {\n      self.bitcore = bitcoreLibCash;\n    } else if (coin == 'btg') {\n      self.bitcore = bitcoreLibGold;\n    } else {\n      throw new Error(\"Unknown coin \" + coin);\n    }\n\n    return this.buildWallet(credentials);\n  }\n\n  scanWallet(wallet: any, inGap: number, reportFn: Function, cb: Function) {\n    var utxos: Array<any>;\n\n    // getting main addresses\n    this.getActiveAddresses(wallet, inGap, reportFn, (err, addresses) => {\n      if (err) return cb(err);\n      utxos = _.flatten(_.map(addresses, \"utxo\"));\n      var result = {\n        addresses: _.uniq(addresses),\n        balance: _.sumBy(utxos, 'amount'),\n      }\n      return cb(null, result);\n    });\n  }\n\n  getPaths(wallet: any) {\n    if (wallet.derivationStrategy == 'BIP45') {\n      var p = _.clone(this.PATHS[wallet.derivationStrategy]);\n      // adds copayer's paths\n      for(let i=0; i<wallet.n; i++) {\n        var copayerPaths = [\"m/45'/\"+i+\"/0\",  \"m/45'/\"+i+\"/1\"];\n        p = p.concat(copayerPaths);\n      };\n      return p;\n    }\n    if (wallet.derivationStrategy == 'BIP44')\n      return this.PATHS[wallet.derivationStrategy][wallet.network];\n  };\n\n  getHdDerivations(wallet: any) {\n    var self = this;\n\n    function deriveOne(xpriv, path, compliant) {\n      var hdPrivateKey = self.bitcore.HDPrivateKey(xpriv);\n      var xPrivKey = compliant ? hdPrivateKey.deriveChild(path) : hdPrivateKey.deriveNonCompliantChild(path);\n      return xPrivKey;\n    };\n\n    function expand(groups) {\n      if (groups.length == 1) return groups[0];\n\n      function combine(g1, g2) {\n        var combinations = [];\n        for (var i = 0; i < g1.length; i++) {\n          for (var j = 0; j < g2.length; j++) {\n            combinations.push(_.flatten([g1[i], g2[j]]));\n          };\n        };\n        return combinations;\n      };\n      return combine(groups[0], expand(_.tail(groups)));\n    };\n\n    var xPrivKeys = _.map(wallet.copayers, 'xPriv');\n    var derivations = [];\n    _.each(this.getPaths(wallet), (path) => {\n      var derivation = expand(_.map(xPrivKeys, (xpriv, i) => {\n        var compliant = deriveOne(xpriv, path, true);\n        var nonCompliant = deriveOne(xpriv, path, false);\n        var items = [];\n        items.push({\n          copayer: i + 1,\n          path: path,\n          compliant: true,\n          key: compliant\n        });\n        if (compliant.toString() != nonCompliant.toString()) {\n          items.push({\n            copayer: i + 1,\n            path: path,\n            compliant: false,\n            key: nonCompliant\n          });\n        }\n        return items;\n      }));\n      derivations = derivations.concat(derivation);\n    });\n\n    return derivations;\n  };\n\n  getActiveAddresses(wallet: any, inGap: number, reportFn: Function, cb: Function) {\n    let self = this;\n    var activeAddress = [];\n    var inactiveCount;\n\n    var baseDerivations = this.getHdDerivations(wallet);\n    console.log(baseDerivations);\n\n    function exploreDerivation(i) {\n\n      if (i >= baseDerivations.length) return cb(null, _.uniqBy(activeAddress, 'address'));\n      inactiveCount = 0;\n      derive(baseDerivations[i], 0, (err, addresses) => {\n        if (err) return cb(err);\n        exploreDerivation(i + 1);\n      });\n    }\n\n    function derive(baseDerivation, index, cb) {\n      if (inactiveCount > inGap) return cb();\n\n      var address = self.generateAddress(wallet, baseDerivation, index);\n      self.getAddressData(address, wallet.coin, wallet.network, (err, addressData) => {\n        if (err) return cb(err);\n\n        if (!_.isEmpty(addressData)) {\n          console.log('#Active address:', addressData);\n          console.log(addressData.privKeys[0].toWIF());\n          activeAddress.push(addressData);\n          inactiveCount = 0;\n        } else\n          inactiveCount++;\n\n        reportFn(inactiveCount, _.uniqBy(activeAddress, 'address'));\n\n        derive(baseDerivation, index + 1, cb);\n      });\n    }\n    exploreDerivation(0);\n  }\n\n  generateAddress(wallet: any, derivedItems: any, index: number) {\n    var self = this;\n    var derivedPrivateKeys = [];\n    var derivedPublicKeys = [];\n\n    _.each([].concat(derivedItems), (item) => {\n      var hdPrivateKey = self.bitcore.HDPrivateKey(item.key);\n\n      // private key derivation\n      var derivedPrivateKey = hdPrivateKey.deriveChild(index).privateKey;\n      derivedPrivateKeys.push(derivedPrivateKey);\n\n      // public key derivation\n      derivedPublicKeys.push(derivedPrivateKey.publicKey);\n    });\n    if (wallet.publicKeyRing) {\n      let hdPublicKey;\n      let derivedItemsArray = [].concat(derivedItems);\n      let path = derivedItemsArray[0].path.split('/');\n      let isChange = parseInt(_.last(path).toString());\n      derivedPublicKeys = [];\n      wallet.publicKeyRing.forEach((item) => {\n      if (wallet.derivationStrategy == 'BIP45') {\n          // (sharedId = 2147483647 )\n          let copayerId = parseInt(_.nth(path, -2).toString());\n          hdPublicKey = new self.bitcore.HDPublicKey(item.xPubKey).deriveChild(copayerId).deriveChild(isChange).deriveChild(index);\n        }\n        else if (wallet.derivationStrategy == 'BIP44') {\n          hdPublicKey = new self.bitcore.HDPublicKey(item.xPubKey).deriveChild(isChange).deriveChild(index);\n        }\n\n        derivedPublicKeys.push(hdPublicKey.publicKey);\n      });\n    }\n\n    var address;\n    if (wallet.addressType == \"P2SH\")\n      address = self.bitcore.Address.createMultisig(derivedPublicKeys, wallet.m, wallet.network);\n    else if (wallet.addressType == \"P2PKH\")\n      address = self.bitcore.Address.fromPublicKey(derivedPublicKeys[0], wallet.network);\n    else\n      throw new Error('Address type not supported');\n    return {\n      addressObject: address,\n      pubKeys: derivedPublicKeys,\n      privKeys: derivedPrivateKeys,\n      info: derivedItems,\n      index: index,\n    };\n  }\n\n  getAddressData(address: any, coin: string, network: string, cb: Function) {\n    let self = this;\n    // call insight API to get address information\n    this.checkAddress(address.addressObject, coin, network).then((respAddressObs: any) => {\n      respAddressObs.subscribe(respAddress => {\n        // call insight API to get utxo information\n        self.checkUtxos(address.addressObject, coin, network).then((respUtxo: any) => {\n          respUtxo.subscribe(respUtxoData => {\n\n            if (coin + '/' + network == 'bch/livenet' && this.shouldTranslate) {\n              respAddress.addrStr = this.translateAddressCash(respAddress.addrStr).toString();\n              respUtxoData = this.translateUtxoAddress(respUtxoData);\n            }\n\n            var addressData = {\n              address: respAddress.addrStr,\n              balance: respAddress.balance,\n              unconfirmedBalance: respAddress.unconfirmedBalance,\n              utxo: respUtxoData,\n              privKeys: address.privKeys,\n              pubKeys: address.pubKeys,\n              info: address.info,\n              index: address.index,\n              isActive: respAddress.unconfirmedTxApperances + respAddress.txApperances > 0,\n            };\n            // TODO: Review this comment\n            //$rootScope.$emit('progress', _.pick(addressData, 'info', 'address', 'isActive', 'balance'));\n\n            /* This timeout is because we must not exceed the limit of 30 requests per minute to the server.\n            If you do, you will get an HTTP 429 error */\n            setTimeout(() => {\n              if (addressData.isActive)\n                return cb(null, addressData);\n              return cb();\n            }, 2000);\n          });\n        });\n      });\n    });\n  }\n\n  translateUtxoAddress(utxoArray: any): string {\n    utxoArray.forEach(utxo => {\n      utxo.address = this.translateAddressCash(utxo.address);\n    });\n    return utxoArray;\n  }\n\n  translateAddressCash(address: string): string {\n    let origAddress = bitcoreLib.Address(address);\n    let origObj = origAddress.toObject();\n    let resultAddress = bitcoreLibCash.Address.fromObject(origObj);\n    return resultAddress;\n  }\n\n  translateAddress(address: string): string {\n    let origAddress = bitcoreLibCash.Address(address);\n    let origObj = origAddress.toObject();\n    let resultAddress = bitcoreLib.Address.fromObject(origObj);\n    return resultAddress;\n  }\n\n  checkAddress(address: string, coin: string, network: string): Promise<any> {\n    if (coin + '/' + network == 'bch/livenet' && this.shouldTranslate) {\n      address = this.translateAddress(address);\n    }\n    var url = this.apiURI[coin + '/' + network] + 'addr/' + address.toString() + '?noTxList=1';\n    return new Promise(resolve => {\n      resolve(this.http.get(url));\n    });\n  }\n\n  checkUtxos(address: string, coin: string, network: string): Promise<any> {\n    if (coin + '/' + network == 'bch/livenet' && this.shouldTranslate) {\n      address = this.translateAddress(address);\n    }\n    var url = this.apiURI[coin + '/' + network] + 'addr/' + address.toString() + '/utxo?noCache=1';\n    return new Promise(resolve => {\n      resolve(this.http.get(url));\n    });\n  }\n\n  createRawTx(toAddress: string, scanResults: any, wallet: any, fee: number) {\n    var self = this;\n    if (!toAddress || !self.bitcore.Address.isValid(toAddress))\n      throw new Error('Please enter a valid address.');\n\n    var amount = parseInt((scanResults.balance * 1e8 - fee * 1e8).toFixed(0));\n\n    if (amount <= 0)\n      throw new Error('Funds are insufficient to complete the transaction');\n\n    console.log('Generating a ' + wallet.coin + ' transaction');\n\n    try {\n      new self.bitcore.Address(toAddress, wallet.network);\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('Incorrect destination address network');\n    }\n\n    try {\n      var privKeys = [];\n\n      var tx = new self.bitcore.Transaction();\n\n      _.each(scanResults.addresses, (address: any) => {\n        if (address.utxo.length > 0) {\n          _.each(address.utxo, (u) => {\n\n            if (wallet.addressType == 'P2SH')\n              tx.from(u, address.pubKeys, wallet.m);\n            else\n              tx.from(u);\n\n            privKeys = privKeys.concat(address.privKeys.slice(0, wallet.m));\n          });\n        }\n      });\n\n\n      tx.to(toAddress, amount);\n      tx.sign(_.uniq(privKeys));\n      var rawTx = tx.serialize();\n      console.log(\"Raw transaction: \", rawTx);\n      return rawTx;\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('Could not build tx: ' + ex);\n    }\n  }\n\n  // Todo: implement txBroadcast as a Promise\n  txBroadcast(rawTx: string, coin: string, network: string): Promise<any> {\n    var url = this.apiURI[coin + '/' + network] + 'tx/send';\n    console.log('Posting tx to...' + url);\n    return new Promise(resolve => {\n      resolve(this.http.post(url, {\n        rawtx: rawTx\n      }));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/rshaw/Development/copay-recovery/src/app/services/recovery.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/rshaw/Development/copay-recovery/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/rshaw/Development/copay-recovery/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 0\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 1\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 10\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 11\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 2\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 3\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 4\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 5\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 6\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 7\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 8\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 9\n// module chunks = 1"],"sourceRoot":"webpack:///"}